/*
 *  TINET (TCP/IP Protocol Stack)
 * 
 *  Copyright (C) 2001-2017 by Dep. of Computer Science and Engineering
 *                   Tomakomai National College of Technology, JAPAN
 *
 *  上記著作権者は，以下の (1)～(4) の条件か，Free Software Foundation 
 *  によって公表されている GNU General Public License の Version 2 に記
 *  述されている条件を満たす場合に限り，本ソフトウェア（本ソフトウェア
 *  を改変したものを含む．以下同じ）を使用・複製・改変・再配布（以下，
 *  利用と呼ぶ）することを無償で許諾する．
 *  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *      スコード中に含まれていること．
 *  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *      の無保証規定を掲載すること．
 *  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *      用できない形で再配布する場合には，次の条件を満たすこと．
 *    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *        作権表示，この利用条件および下記の無保証規定を掲載すること．
 *  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 *
 *  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *  よびTOPPERSプロジェクトは，本ソフトウェアに関して，その適用可能性も
 *  含めて，いかなる保証も行わない．また，本ソフトウェアの利用により直
 *  接的または間接的に生じたいかなる損害に関しても，その責任を負わない．
 * 
 *  @(#) $Id: net_jsp.cfg 1.7 2017/6/1 8:49:10 abe $
 */

/*
 *  JSP用 汎用ネットワークコンフィギュレーションファイル
 */


/*
 *  共通 汎用ネットワークコンフィギュレーションファイルのインクルード
 */

#include "net/net.cfg"

/*
 * ネットワークバッファ
 */

#if defined(NUM_MPF_NET_BUF_CSEG) && NUM_MPF_NET_BUF_CSEG > 0
CRE_MPF(MPF_NET_BUF_CSEG, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_CSEG,
		sizeof(T_NET_BUF_CSEG),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_CSEG) && NUM_MPF_NET_BUF_CSEG > 0 */

#if defined(NUM_MPF_NET_BUF_64) && NUM_MPF_NET_BUF_64 > 0
CRE_MPF(MPF_NET_BUF_64, {
		TA_TFIFO, NUM_MPF_NET_BUF_64,
		sizeof(T_NET_BUF_64),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_64) && NUM_MPF_NET_BUF_64 > 0 */

#if defined(NUM_MPF_NET_BUF_128) && NUM_MPF_NET_BUF_128 > 0
CRE_MPF(MPF_NET_BUF_128, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_128,
		sizeof(T_NET_BUF_128),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_128) && NUM_MPF_NET_BUF_128 > 0 */

#if defined(NUM_MPF_NET_BUF_256) && NUM_MPF_NET_BUF_256 > 0
CRE_MPF(MPF_NET_BUF_256, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_256,
		sizeof(T_NET_BUF_256),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_256) && NUM_MPF_NET_BUF_256 > 0 */

#if defined(NUM_MPF_NET_BUF_512) && NUM_MPF_NET_BUF_512 > 0
CRE_MPF(MPF_NET_BUF_512, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_512,
		sizeof(T_NET_BUF_512),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_512) && NUM_MPF_NET_BUF_512 > 0 */

#if defined(NUM_MPF_NET_BUF_IP_MSS) && NUM_MPF_NET_BUF_IP_MSS > 0
CRE_MPF(MPF_NET_BUF_IP_MSS, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_IP_MSS,
		sizeof(T_NET_BUF_IP_MSS),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_IP_MSS) && NUM_MPF_NET_BUF_IP_MSS > 0 */

#if defined(NUM_MPF_NET_BUF_1024) && NUM_MPF_NET_BUF_1024 > 0
CRE_MPF(MPF_NET_BUF_1024, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_1024,
		sizeof(T_NET_BUF_1024),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_1024) && NUM_MPF_NET_BUF_1024 > 0 */

#if defined(NUM_MPF_NET_BUF_IPV6_MMTU) && NUM_MPF_NET_BUF_IPV6_MMTU > 0
CRE_MPF(MPF_NET_BUF_IPV6_MMTU, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_IPV6_MMTU,
		sizeof(T_NET_BUF_IPV6_MMTU),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_IPV6_MMTU) && NUM_MPF_NET_BUF_IPV6_MMTU > 0 */

#if defined(NUM_MPF_NET_BUF_IF_PDU) && NUM_MPF_NET_BUF_IF_PDU > 0
CRE_MPF(MPF_NET_BUF_IF_PDU, {
		TA_TFIFO,
		NUM_MPF_NET_BUF_IF_PDU,
		sizeof(T_NET_BUF_IF_PDU),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF_IF_PDU) && NUM_MPF_NET_BUF_IF_PDU > 0 */

#if defined(NUM_MPF_NET_BUF6_REASSM) && NUM_MPF_NET_BUF6_REASSM > 0

CRE_MPF(MPF_NET_BUF_REASSM, {
		TA_TFIFO,
		NUM_MPF_NET_BUF6_REASSM,
		sizeof(T_NET_BUF6_REASSM),
		NULL
		});

#else	/* of #if defined(NUM_MPF_NET_BUF6_REASSM) && NUM_MPF_NET_BUF6_REASSM > 0 */

#if defined(NUM_MPF_NET_BUF4_REASSM) && NUM_MPF_NET_BUF4_REASSM > 0

CRE_MPF(MPF_NET_BUF_REASSM, {
		TA_TFIFO,
		NUM_MPF_NET_BUF4_REASSM,
		sizeof(T_NET_BUF4_REASSM),
		NULL
		});

#endif	/* of #if defined(NUM_MPF_NET_BUF4_REASSM) && NUM_MPF_NET_BUF4_REASSM > 0 */

#endif	/* of #if defined(NUM_MPF_NET_BUF6_REASSM) && NUM_MPF_NET_BUF6_REASSM > 0 */

#if defined(NUM_MPF_NET_BUF6_65536) && NUM_MPF_NET_BUF6_65536 > 0
CRE_MPF(MPF_NET_BUF6_65536, {
		TA_TFIFO,
		NUM_MPF_NET_BUF6_65536,
		sizeof(T_NET_BUF6_65536),
		NULL
		});
#endif	/* of #if defined(NUM_MPF_NET_BUF6_65536) && NUM_MPF_NET_BUF6_65536 > 0 */
